import re
import os
from telethon import TelegramClient, events

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (Render)
API_ID = int(os.getenv("API_ID"))  # API ID
API_HASH = os.getenv("API_HASH")  # API Hash
SESSION_NAME = "session"  # –ò–º—è —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram
client = TelegramClient(SESSION_NAME, API_ID, API_HASH)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
def parse_trade_signal(message_text):
    match = re.search(r'BINANCE:(ENTER|SHORT|LONG)-?(.*?), (\w+),üí≤current price = ([\d.]+)', message_text)
    if match:
        return {
            "action": match.group(1) + (" " + match.group(2) if match.group(2) else ""),
            "currency_pair": match.group(3),
            "price": float(match.group(4))
        }
    return None

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø—ã
@client.on(events.NewMessage)
async def handle_new_message(event):
    signal = parse_trade_signal(event.message.text)
    if signal:
        print(f"üì© –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª: {signal['action']} –Ω–∞ {signal['currency_pair']} –ø–æ —Ü–µ–Ω–µ {signal['price']}")

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
async def main():
    await client.start()
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç Telegram...")
    await client.run_until_disconnected()

client.loop.run_until_complete(main())
